//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PayID.Partner.bccp_ws {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://vnpost.vn/", ConfigurationName="bccp_ws.PaycodeSoap")]
    public interface PaycodeSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/ProccessCreadingLand", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ProccessCreadingLand(string LandingCode, int Weight, string SenderName, string SenderAddr, string SenderMobile, string ReceiverName, string ReceiverAddr, string ReceiverMobile, double Amount, string SenderPOCode, string ReceiverPOCode, string ProductName, string Description, string ServiceType, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/ProccessCreadingLand", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ProccessCreadingLandAsync(string LandingCode, int Weight, string SenderName, string SenderAddr, string SenderMobile, string ReceiverName, string ReceiverAddr, string ReceiverMobile, double Amount, string SenderPOCode, string ReceiverPOCode, string ProductName, string Description, string ServiceType, int Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/ProccessQuerryInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ProccessQuerryInfo(string LandingCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/ProccessQuerryInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ProccessQuerryInfoAsync(string LandingCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/ProccessChargesInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ProccessChargesInfo(int Weight, double Amount, string ServiceType, string POSenderCode, string POReceiverCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/ProccessChargesInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ProccessChargesInfoAsync(int Weight, double Amount, string ServiceType, string POSenderCode, string POReceiverCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/ProccessTrackingInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ProccessTrackingInfo(string LandingCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/ProccessTrackingInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ProccessTrackingInfoAsync(string LandingCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/FreightTransit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int FreightTransit(int Weight, string SenderPOCode, string ReceiverPOCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/FreightTransit", ReplyAction="*")]
        System.Threading.Tasks.Task<int> FreightTransitAsync(int Weight, string SenderPOCode, string ReceiverPOCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/FreightCOD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double FreightCOD(int Amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vnpost.vn/FreightCOD", ReplyAction="*")]
        System.Threading.Tasks.Task<double> FreightCODAsync(int Amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PaycodeSoapChannel : PayID.Partner.bccp_ws.PaycodeSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaycodeSoapClient : System.ServiceModel.ClientBase<PayID.Partner.bccp_ws.PaycodeSoap>, PayID.Partner.bccp_ws.PaycodeSoap {
        
        public PaycodeSoapClient() {
        }
        
        public PaycodeSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaycodeSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaycodeSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaycodeSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public System.Data.DataSet ProccessCreadingLand(string LandingCode, int Weight, string SenderName, string SenderAddr, string SenderMobile, string ReceiverName, string ReceiverAddr, string ReceiverMobile, double Amount, string SenderPOCode, string ReceiverPOCode, string ProductName, string Description, string ServiceType, int Type) {
            return base.Channel.ProccessCreadingLand(LandingCode, Weight, SenderName, SenderAddr, SenderMobile, ReceiverName, ReceiverAddr, ReceiverMobile, Amount, SenderPOCode, ReceiverPOCode, ProductName, Description, ServiceType, Type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ProccessCreadingLandAsync(string LandingCode, int Weight, string SenderName, string SenderAddr, string SenderMobile, string ReceiverName, string ReceiverAddr, string ReceiverMobile, double Amount, string SenderPOCode, string ReceiverPOCode, string ProductName, string Description, string ServiceType, int Type) {
            return base.Channel.ProccessCreadingLandAsync(LandingCode, Weight, SenderName, SenderAddr, SenderMobile, ReceiverName, ReceiverAddr, ReceiverMobile, Amount, SenderPOCode, ReceiverPOCode, ProductName, Description, ServiceType, Type);
        }
        
        public System.Data.DataSet ProccessQuerryInfo(string LandingCode) {
            return base.Channel.ProccessQuerryInfo(LandingCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ProccessQuerryInfoAsync(string LandingCode) {
            return base.Channel.ProccessQuerryInfoAsync(LandingCode);
        }
        
        public System.Data.DataSet ProccessChargesInfo(int Weight, double Amount, string ServiceType, string POSenderCode, string POReceiverCode) {
            return base.Channel.ProccessChargesInfo(Weight, Amount, ServiceType, POSenderCode, POReceiverCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ProccessChargesInfoAsync(int Weight, double Amount, string ServiceType, string POSenderCode, string POReceiverCode) {
            return base.Channel.ProccessChargesInfoAsync(Weight, Amount, ServiceType, POSenderCode, POReceiverCode);
        }
        
        public System.Data.DataSet ProccessTrackingInfo(string LandingCode) {
            return base.Channel.ProccessTrackingInfo(LandingCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ProccessTrackingInfoAsync(string LandingCode) {
            return base.Channel.ProccessTrackingInfoAsync(LandingCode);
        }
        
        public int FreightTransit(int Weight, string SenderPOCode, string ReceiverPOCode) {
            return base.Channel.FreightTransit(Weight, SenderPOCode, ReceiverPOCode);
        }
        
        public System.Threading.Tasks.Task<int> FreightTransitAsync(int Weight, string SenderPOCode, string ReceiverPOCode) {
            return base.Channel.FreightTransitAsync(Weight, SenderPOCode, ReceiverPOCode);
        }
        
        public double FreightCOD(int Amount) {
            return base.Channel.FreightCOD(Amount);
        }
        
        public System.Threading.Tasks.Task<double> FreightCODAsync(int Amount) {
            return base.Channel.FreightCODAsync(Amount);
        }
    }
}

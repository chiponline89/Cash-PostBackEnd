@model dynamic[]
<style>
    /*
        Text fields
    */
    div.input-group-option:last-child span.input-group-addon-remove {
        display: none;
    }

    div.input-group-option:last-child input.form-control {
        border-bottom-right-radius: 3px;
        border-top-right-radius: 3px;
    }

    div.input-group-option span.input-group-addon-remove {
        cursor: pointer;
    }

    div.input-group-option {
        margin-bottom: 3px;
    }

    /*
        Selects
    */

    div.input-group-multiple-select:last-child span.input-group-addon-remove {
        display: none;
    }

    div.input-group-multiple-select:last-child input.form-control {
        border-bottom-right-radius: 3px;
        border-top-right-radius: 3px;
    }

    div.input-group-multiple-select span.input-group-addon-remove {
        cursor: pointer;
        background: none;
        border: none;
    }

    div.input-group-multiple-select {
        margin-bottom: 5px;
    }

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 2px;
        background-color: #B0BB0C;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }
</style>

@{
    if (Session["profile"] == null)
    {
        PayID.Portal.Common.Service.AccountService data = new PayID.Portal.Common.Service.AccountService();
        var profile = data.GetAccountByUserName(User.Identity.Name);
        Session["profile"] = profile;
    }

    var oProfile = (PayID.Portal.Models.Account)Session["profile"];
}


<div class="actions cm-sticky-scroll" data-ce-top="41" data-ce-padding="37" id="actions_panel">
    <div class="title pull-left">
        <h2 style="font-family:-webkit-body;" title="Dashboard">Cấu hình luồng xử lý</h2>
    </div>
</div>
<div class="content ufa">
    <div class="content-wrap">
        <div class="row marginLR">
            <div class="col-md-6">
                @if (oProfile.UnitCode == "00")
                {
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="UnitProcess">Đơn vị áp dụng</label>
                                @Html.DropDownList("UnitProcess", (IEnumerable<SelectListItem>)ViewBag.ListUnit, new { @class = "form-control", @onchange = "System.ListWorkFlow()" })
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    @Html.Hidden("UnitProcess", oProfile.UnitCode)
                }
            </div>
        </div>
        <div class="row marginLR">
            <div class="col-md-6">
                <span class="label"> <span class="glyphicon glyphicon-info-sign"></span> Danh sách luồng xử lý</span>
                <div class="table-responsive">
                    <table class="table table-striped table-bordered datatables dataTable no-footer">
                        <thead>
                            <tr class="tr_head">
                                <td>Dịch vụ</td>
                                <td>Loại yêu cầu</td>
                                <td>Luồng xử lý</td>
                            </tr>
                        </thead>
                        <tbody class="tbody" id="listWorkflow">
                            @{Html.RenderAction("ListWorkflow", "Setting", new { @Area = "Systems", @unitCode = oProfile.UnitCode });}
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-md-6">
                <form id="frmWorkFlow">
                    @Html.AntiForgeryToken()
                    <div class="alert alert-info">
                        <span class="label"> <span class="glyphicon glyphicon-info-sign"></span> Cấu hình luồng xử lý</span>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Loại dịch vụ</label>
                                    <select id="cbServices" onchange="System.ServiceChange(this.value)" class="form-control validate[required]">
                                        <option value="" data-service="NONE">--Chọn loại dịch vụ--</option>
                                        <option value="SHIPPING">Vận chuyển</option>
                                        @*<option value="PAYMENT">Thanh toán</option>
            <option value="SUPPORT">Hỗ trợ Khách hàng</option>*@
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Loại yêu cầu</label>
                                    <select id="cbTypes" class="form-control validate[required]">
                                        <option value="" data-service="NONE">--Chọn loại yêu cầu--</option>
                                        <option value="PICKUP" data-service="SHIPPING">Thu gom</option>
                                        @*<option value="GETBACK" data-service="SHIPPING">Rút bưu gửi</option>
                                        <option value="FORWARD" data-service="SHIPPING">Chuyển tiếp</option>
                                        <option value="C2" data-service="SHIPPING">Hủy</option>
                                        <option value="CHECK" data-service="PAYMENT">Tra soát giao dịch</option>
                                        <option value="GENERAL" data-service="SUPPORT">Hỗ trợ KH</option>*@
                                    </select>
                                </div>
                            </div>
                        </div>
                        @*Tùy biến*@
                        <div id="wf">
                            <span class="label"> <span class="glyphicon glyphicon-info-sign"></span> Các bước xử lý</span>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group form-group-multiple-selects">
                                        <div class="input-group input-group-multiple-select">
                                            <select class="form-control" name="values[]">
                                                <option value="">Thêm cấp xử lý</option>
                                                <option value="BDT" data-name="BĐ Tỉnh">Bưu điện tỉnh</option>
                                                <option value="BDTT" data-name="BĐ Huyện/Trung tâm">Bưu điện trung tâm/huyện</option>
                                                <option value="BCU" data-name="Bưu cục">Bưu cục</option>
                                                <option value="DTH" data-name="Đường thư">Đường thư</option>
                                                <option value="EMP" data-name="Bưu tá">Bưu tá</option>
                                                @*@foreach (dynamic dy in ViewBag.external_unit)
                                                    {
                                                        <option value="@dy.code" data-name="@dy.name">@dy.name</option>
                                                    }*@
                                            </select>
                                            <span class="input-group-addon input-group-addon-remove">
                                                <span class="fa fa-times"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="stepwizard">
                                    <div class="stepwizard-row">
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <button type="button" class="btn btn-primary" onclick="System.SaveWork()">Cập nhật</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('#wf').hide();

        $('#cbTypes').change(function () {
            $('#wf').show();
        });
    })

    $(function () {
        $(document).on('focus', 'div.form-group-options div.input-group-option:last-child input', function () {
            var sInputGroupHtml = $(this).parent().html();
            var sInputGroupClasses = $(this).parent().attr('class');
            $(this).parent().parent().append('<div class="' + sInputGroupClasses + '">' + sInputGroupHtml + '</div>');
        });

        $(document).on('click', 'div.form-group-options .input-group-addon-remove', function () {
            $(this).parent().remove();
        });
    });

    /*
        Selects
    */
    $(function () {
        $(document).on('change', '.form-group-multiple-selects .input-group-multiple-select:last-child select', function () {

            var selectsLength = $('.form-group-multiple-selects .input-group-multiple-select select').length;
            var optionsLength = ($(this).find('option').length) - 1;

            if (selectsLength < optionsLength) {
                var sInputGroupHtml = $(this).parent().html();
                var sInputGroupClasses = $(this).parent().attr('class');
                $(this).parent().parent().append('<div class="' + sInputGroupClasses + '">' + sInputGroupHtml + '</div>');
            }

            updateValues();

        });

        $(document).on('change', '.form-group-multiple-selects .input-group-multiple-select:not(:last-child) select', function () {

            updateValues();

        });

        $(document).on('click', '.input-group-addon-remove', function () {
            $(this).parent().remove();
            updateValues();
        });

        System.RefreshWorkflowDiagram();

        function updateValues() {
            System.Value = new Array();
            $('.form-group-multiple-selects .input-group-multiple-select select').each(function () {
                var value = $(this).val();
                if (value != 0 && value != "") {
                    System.Value.push(value);
                }
            });


            $('.form-group-multiple-selects .input-group-multiple-select select').find('option').each(function () {
                var optionValue = $(this).val();
                var selectValue = $(this).parent().val();
                if (in_array(optionValue, System.Value) != -1 && selectValue != optionValue) {
                    $(this).attr('disabled', 'disabled');
                }
                else {
                    //texts.push($(this).html());
                    //alert($(this).html());
                    $(this).removeAttr('disabled');
                }
            });
            System.RefreshWorkflowDiagram();
        }

        function in_array(needle, haystack) {
            var found = 0;
            for (var i = 0, length = haystack.length; i < length; i++) {
                if (haystack[i] == needle) return i;
                found++;
            }
            return -1;
        }
    });
</script>
